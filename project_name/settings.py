"""
Django settings for {{ project_name }} project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/{{ docs_version }}/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/
"""

import os
import re

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/{{ docs_version }}/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '{{ secret_key }}'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'events',
    'django_celery_beat',
    'django_celery_results',
    'rangefilter',
    'raven.contrib.django.raven_compat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '{{ project_name }}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '{{ project_name }}.wsgi.application'


# Database
# https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # noqa
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # noqa
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # noqa
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # noqa
    },
]


# Internationalization
# https://docs.djangoproject.com/en/{{ docs_version }}/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'  # TODO: Change timezone

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/{{ docs_version }}/howto/static-files/

def rel(path, base_dir=BASE_DIR):
    return os.path.join(base_dir, path)


STATIC_ROOT = rel('static')
STATIC_URL = '/static/'

CELERY_RESULT_BACKEND = 'django-db'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_SEND_TASK_ERROR_EMAILS = False
CELERY_BROKER_URL = (
    'redis://%s:%s/0' % (
        os.environ.get('REDIS_HOST', 'localhost'),
        os.environ.get('REDIS_PORT', '6379'),
    )
)

LOGGING = {
    'version': 1,
    'handlers': {
        'graypy': {
            'level': 'DEBUG',
            'class': 'graypy.GELFHandler',
            'host': 'graylog.wwhw.org',
            'port': 12201,
        },
    },

    'loggers': {
        'django': {
            'handlers': ['graypy'],
            'level': 'INFO',
            'propagate': True,
        },
        '{{ project_name }}': {
            'handlers': ['graypy'],
            'level': 'DEBUG',
        },
        'celery.task': {
            'handlers': ['graypy'],
            'level': 'ERROR',
            'propagate': True,
        },
        'celery': {
            'handlers': ['graypy'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

MODELTRANSLATION_LANGUAGES = (
    'en',  # TODO: Change this to real language
)

DEFAULT_LANGUAGE = MODELTRANSLATION_LANGUAGES[0]

ROOT_URL = '{{ project_name }}'  # TODO: Change this to real root

ORIGIN = re.search(r'(?<=://)[^/]*', ROOT_URL).group()

try:
    from .settings_dev import *  # noqa
except ImportError:
    import logging
    logging.warn("There's no dev settings file, running with stock settings")

try:
    from .settings_local import *  # noqa
except ImportError:
    import logging
    logging.warn("There's no local settings file, running with stock settings")

try:
    from .settings_dev import *  # noqa
except ImportError:
    import logging
    logging.warn("There's no dev settings file, running with stock settings")
